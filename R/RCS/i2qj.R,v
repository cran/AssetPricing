head	1.3;
access;
symbols;
locks
	rolf:1.3; strict;
comment	@# @;


1.3
date	2012.10.26.05.49.35;	author rolf;	state Exp;
branches;
next	1.2;

1.2
date	2009.11.28.22.44.37;	author rolf;	state Exp;
branches;
next	1.1;

1.1
date	2009.10.31.22.59.13;	author rolf;	state Exp;
branches;
next	;


desc
@Convert a single index for the doubly indexed price model to q
and j indices with ``x[i] == x[q,j]'', q = 1, ..., qmax, j = 1,
..., q, with the x[i] being the x[q,j] strung out with j = 1 first,
then j = 2, then ....

@


1.3
log
@Re-wrote so that the code assumes indices are stored
*column by column* which is the protocol assumed by
qj2i().  Previously i2qj() assumed *row by row* storage
and so was inconsistent with qj2i().
@
text
@i2qj <- function(i,qmax,jmax){
    if(jmax > qmax)
		stop(paste("Argument \"jmax\" must be less than",
                           "or equal to \"qmax\".\n"))
    M <- matrix(NA,nrow=qmax,ncol=jmax)
    itop <- jmax*(qmax - (jmax-1)/2)
    M[row(M) >= col(M)] <- 1:itop
    q_all <- row(M)[!is.na(M)]
    j_all <- col(M)[!is.na(M)]
    if(missing(i)) {
        i <- 1:itop
    } else if(any(i > itop)) {
            stop("At least one value of \"i\" out of range.\n")
    }
    list(q=q_all[i],j=j_all[i])
}
@


1.2
log
@Added a jmax argument, defaulting to qmax; there's a check
that jmax is <= qmax.  Changed the order of the values in
the returned list to correspond to the function name.
@
text
@d1 2
a2 2
i2qj <- function(i,qmax,jmax=qmax){
	if(jmax > qmax)
d5 11
a15 6
	if(missing(i)) i <- 1:(jmax*(qmax - (jmax-1)/2))
	foo <- function(i,n){i - n*floor(-0.1+i/n)}
	ii  <- (1:(qmax*(1+qmax)/2) + rep((0:(qmax-1))*(1:qmax)/2,qmax:1))[i]
	q   <- foo(ii,qmax)
	j   <- (ii-q)/qmax + 1
	list(q=q,j=j)
@


1.1
log
@Initial revision
@
text
@d1 5
a5 1
i2qj <- function(i,qmax){
d10 1
a10 1
	list(j=j,q=q)
@
